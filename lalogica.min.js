let x,stringSum,stringM,suma,sM,eM,inf,sup,dif;const qN=2,rMin=1,rMax=50,M=[],Pa=[],Pr=[],rangM=[];let invRangM=[],rangMPar=[],invRangMSen=[],countN=0,countD=0,iM=0,iPa=0,iPr=0,iRangM=0,iInvRangM=0,msg1="Introdueix un número entre "+rMin+" i "+rMax,msg1b="Ara introdueix un altre número entre  "+rMin+" i "+rMax,error="Valor introduït incorrecte. Has d'introduïr un número entre 1 i 50.",msg2="",msg3a,msg3b="",msg3="",msg4a,msg4b="",msg4="",msg5="";function reset(){for(countN=0,countD=0,iM=0,iPa=0,iPr=0,iRangM=0,iInvRangM=0,msg2="",stringSum=null;M.length>0;)M.pop(),Pa.pop(),Pr.pop(),rangM.pop(),rangMPar.pop(),invRangM.pop(),invRangMSen.pop()}function v(n){return!(isNaN(n)||n<rMin||n>rMax)}function r(m){for(;countN<=qN-1;)m=null!==m?0==countN?msg1:msg1b:msg1,x=Number(prompt(m)),v(x)?(M.push(x),countN++):(m=null,alert(error))}function is1(n){return 1==n}function is2o3(n){return 2==n||3==n}function isPa(n){return n>=2&&n%2==0}function isPr(n){if(is2o3(n))return!0;if(is1(n)||isPa(n))return!1;for(i=3;i<=n;i+=2)return n%i==0?(countD=1,!1):0==countD}function investigar(){M.forEach(element=>{isPa(element)?(console.log(element+" és parell"),Pa[iPa]=1):(console.log(element+" és senar"),Pa[iPa]=0),iPa++,isPr(element)?(console.log(element+" és primer"),Pr[iPr]=1):(console.log(element+" no és primer"),Pr[iPr]=0),iPr++,countD=0})}function sumar(){return stringSum=M.join("+"),suma=eval(stringSum),msg2="La suma de "+M.join(" + ")+" és: "+suma+".",suma}function outPrimorositat(){const subPr=M.filter(element=>isPr(element)),subPrUniq=[...new Set(subPr)],subPrN=M.filter(element=>!isPr(element)),subPrUniqN=[...new Set(subPrN)];let totalitat=subPrUniq.length==M.length,totalitatN=subPrUniqN.length==M.length,plural=subPrUniq.length>1,pluralN=subPrUniqN.length>1,cap=0==subPrUniq.length;msg3a=1==cap?`Cap dels números que has introduït (${M.join(" i ")}) és primer.`:1==totalitat?`Tots els números que has introduït (${subPrUniq.join(" i ")}) són primers.`:0==plural?`Només ${subPrUniq.toString()} és primer.`:`Els números que has introduït (${subPrUniq.join(" i ")}) són primers.`,msg3b=0==pluralN?` El número que has introduït (${subPrUniqN.toString()}) no és primer.`:0==totalitatN?` I dels números següents que has introduït (${subPrUniqN.join(" i ")}) cap és primer.`:"",msg3=msg3a+msg3b}function outParitat(){const subPa=M.filter(element=>isPa(element)),subPaUniq=[...new Set(subPa)],subPaN=M.filter(element=>!isPa(element)),subPaUniqN=[...new Set(subPaN)];let totalitat=subPaUniq.length==M.length,totalitatN=subPaUniqN.length==M.length,plural=subPaUniq.length>1,pluralN=subPaUniqN.length>1,cap=0==subPaUniq.length;msg4a=1==cap?`Cap dels números que has introduït (${M.join(" i ")}) és parell.`:1==totalitat?`Tots els números que has introduït (${subPaUniq.join(" i ")}) són parells.`:0==plural?`Només ${subPaUniq.toString()} és parell.`:`Els números que has introduït (${subPaUniq.join(" i ")}) són parells.`,msg4b=0==pluralN?` El número que has introduït (${subPaUniqN.toString()}) és senar.`:0==totalitatN?` I dels números següents que has introduït (${subPaUniqN.join(" i ")}) són senars.`:"",msg4=msg4a+msg4b}function outUpDown(){for(sM=M[0],eM=M[M.length-1],direcc=sM==eM?"equal":sM<eM?"up":"down",inf=Math.min(...M),sup=Math.max(...M),dif=sup-inf,a=inf;a<=sup;a++)rangM.push(a);invRangM=[...rangM].reverse(),rangMPar=rangM.filter(element=>element%2==0),invRangMSen=invRangM.filter(element=>element%2!=0),msg5="equal"==direcc?inf:"up"==direcc?rangMPar:invRangMSen,console.log("Exercicis 4, 5 i 6: ["+msg5.join(" ")+"]"),console.log("rangM: "+rangM),console.log("rangMPar: "+rangMPar),console.log("invRangM: "+invRangM),console.log("invRangMSen: "+invRangMSen),console.log("Inferior: "+inf),console.log("Superior: "+sup),console.log("Diferència: "+dif),console.log("Direcció: "+direcc)}function start(){reset(),r(),investigar(),sumar(),outPrimorositat(),outParitat(),outUpDown(),console.log("Exercici 1: "+msg2),console.log("Exercici 2: "+msg3),console.log("Exercici 3: "+msg4)}window.onload=function(){document.getElementById("start").onclick=start};